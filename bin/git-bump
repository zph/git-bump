#!/usr/bin/env ruby

$:.unshift(File.expand_path('../../lib', __FILE__))

require 'git_bump'

require 'optparse'

case ARGV[0]
when "help"
  ARGV[0] = "--help"
end

options = {}
OptionParser.new do |opts|
  USAGE = <<-EOS
Usage: git-bump [release|show|next|help]

Call as follows
git-bump release [version|major|minor|point]
git-bump [version|major|minor|point]

With no arguments, git bump defaults to creating a release with the least
significant component of the version number incremented.  For example,
1.2.3-rc4 becomes 1.2.3-rc5, while 6.7 becomes 6.8.  To override, provide a
version number argument, or one of the following keywords:

major: bump the most significant component
minor: bump the second most significant component
point: bump the third most significant component
    EOS
  opts.banner = USAGE

  opts.on("--version_only", "Version only") do |v|
    options[:version_only] = v
  end

  opts.on("-f", "--force", "Force") do |v|
    options[:force] = v
  end

end.parse!

GitBump.start(options)
